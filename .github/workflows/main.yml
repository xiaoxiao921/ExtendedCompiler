name: Publish to Nuget

on:
  release:
    types: [published]
    
jobs:
  publish:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Setup dotnet SDK 2.1.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '2.1.x'
      - name: Setup dotnet SDK 3.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.0.x'
      - name: Setup dotnet SDK 3.1.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.102'
      - name: Setup dotnet SDK 5.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.200'
        
      - name: Get the Release version tag
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
        
      - name: Update targets search path version string
        run: sed -i 's/0.0.1/${{steps.vars.outputs.tag}}/g' ExtendedCompiler/build/ExtendedCompiler.targets
          
      - name: Restore
        run: dotnet restore
          
      - name: Build
        run:
          dotnet build -c Release ExtendedCompiler/ExtendedCompiler.csproj
          -p:Version=${{steps.vars.outputs.tag}}
          -o ./content/
          
      - name: Pack
        run:
          dotnet pack -c Release ExtendedCompiler/ExtendedCompiler.csproj
          -p:Version=${{steps.vars.outputs.tag}}
          -o .
          
      - name: Install zip
        uses: montudor/action-zip@v0.1.1
          
      - name: Put the content folder in nupkg
        run: zip -r *.nupkg ./content/
        
      - name: Publish the package to Nuget
        run: dotnet nuget push "*.nupkg" -k ${{secrets.NUGET_KEY}} -s https://api.nuget.org/v3/index.json
